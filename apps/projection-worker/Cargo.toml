[package]
name = "projection-worker"
version.workspace = true
edition.workspace = true

[dependencies]
core-lib.workspace = true
proto.workspace = true

async-trait.workspace = true
chrono = { workspace = true, features = ["serde"] } # For timestamps
dotenvy.workspace = true
futures-util.workspace = true # For StreamExt
lapin.workspace = true # For direct RabbitMQ interaction
prost.workspace = true
refinery = { workspace = true, features = ["tokio-postgres"] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
sqlx = { workspace = true, features = [
    "runtime-tokio-rustls",
    "postgres",
    "uuid",
    "chrono",
] }
thiserror.workspace = true
tokio = { workspace = true, features = ["full"] }
# Add tokio-postgres back specifically for refinery runner
tokio-postgres = { workspace = true, features = [
    "with-chrono-0_4",
    "with-uuid-1",
] }
tracing.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter"] }
uuid = { workspace = true, features = ["v4", "serde"] } # For IDs

# Tell sqlx-cli where to find migrations for 'cargo sqlx prepare'
[package.metadata.sqlx]
migrations = "migrations"
