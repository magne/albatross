[package]
name = "api-gateway"
version.workspace = true
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
core-lib.workspace = true
cqrs-es.workspace = true
proto.workspace = true

async-trait.workspace = true
axum = { workspace = true, features = ["ws"] }
http.workspace = true
mime_guess.workspace = true
prost.workspace = true
rust-embed = { workspace = true, features = ["include-exclude"] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["full"] }
tokio-stream.workspace = true
tracing.workspace = true
tracing-subscriber = { workspace = true, features = ["env-filter"] } # Added env-filter feature
uuid = { workspace = true, features = ["v4", "serde"] }
chrono = { workspace = true, features = ["serde"] }
sqlx = { workspace = true, features = ["runtime-tokio-rustls","postgres","uuid","chrono"] }
dotenvy.workspace = true
rand = "0.9.1" # Reverted to simple version
argon2 = "0.5.3" # Keep argon2 specific for now, or move to workspace if needed elsewhere
redis.workspace = true
futures-util.workspace = true
tower-http = { version = "0.6", features = ["cors"] }

[dev-dependencies]
axum-test = "17.3.0"
testcontainers = { workspace = true }
testcontainers-modules = { workspace = true, features = ["postgres"] }
tokio = { workspace = true, features = ["full"] }
serde_json.workspace = true
tokio-tungstenite = "0.24"
futures-util.workspace = true
